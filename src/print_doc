#!/bin/lua

-- @script print json doc to console in plain format
-- @usage `cat doc.json | ./print_doc`
--
local cjson = require("cjson")

local function print_endpoint(endpoint_table)
  assert(type(endpoint_table) == "table")

  print(endpoint_table.method .. " " .. endpoint_table.path_signature)
  if endpoint_table.control_headers then
    for _, header in ipairs(endpoint_table.control_headers) do
      local acceptable_values_str = ""
      if header.acceptable_values then
        local acceptable_values = {}
        for _, val in ipairs(header.acceptable_values) do
          table.insert(acceptable_values, val)
        end
        acceptable_values_str = "accept_values: " ..
                                  table.concat(acceptable_values, ", ")
      end

      local is_required_str = "not required"
      if header.required then
        is_required_str = "required"
      end
      print(header.name .. ": ", is_required_str .. ", ", acceptable_values_str)
    end
  end
  if endpoint_table.description then
    print(endpoint_table.description)
  end
end

local function main()
  local str = io.read("*a")
  local doc = cjson.decode(str)

  for version, endpoint_list in pairs(doc) do
    for _, endpoint in ipairs(endpoint_list) do
      print("version: ", version)
      print_endpoint(endpoint)
      print()
    end
  end
end

main()
